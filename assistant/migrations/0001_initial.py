# Generated by Django 5.2.5 on 2025-09-11 08:51

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('conversation_id', models.CharField(max_length=36, unique=True)),
                ('user_id', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='DemandLead',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_provider', models.CharField(choices=[('website', 'Website'), ('facebook', 'Facebook'), ('telegram', 'Telegram'), ('whatsapp', 'Whatsapp'), ('other', 'Other')], max_length=20)),
                ('source_id', models.CharField(max_length=100, unique=True)),
                ('source_url', models.URLField(blank=True, max_length=512, null=True)),
                ('author_name', models.CharField(blank=True, max_length=255)),
                ('author_profile_url', models.URLField(blank=True, max_length=512, null=True)),
                ('raw_content', models.TextField()),
                ('keywords_detected', models.JSONField(blank=True, default=list)),
                ('posted_at', models.DateTimeField(blank=True, null=True)),
                ('structured_lead', models.JSONField(blank=True, null=True)),
                ('status', models.CharField(choices=[('new', 'New'), ('matched', 'Matched'), ('contacted', 'Outreach sent'), ('responded', 'User responded'), ('closed', 'Closed')], default='new', max_length=20)),
                ('is_processed', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-posted_at'],
            },
        ),
        migrations.CreateModel(
            name='LinkSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(unique=True)),
                ('category', models.CharField(help_text='e.g., Residency, Banking, Car Imports', max_length=50)),
                ('language', models.CharField(choices=[('en', 'English'), ('tr', 'Turkish'), ('ru', 'Russian'), ('pl', 'Polish'), ('de', 'German')], default='en', max_length=2)),
                ('last_ingested', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='ServiceProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('category', models.CharField(choices=[('car_rental', 'Car Rental'), ('accommodation', 'Accommodation'), ('activities', 'Activities & Tours'), ('dining', 'Restaurants'), ('transportation', 'Transportation'), ('legal', 'Legal Services'), ('medical', 'Medical Services'), ('shopping', 'Shopping')], max_length=20)),
                ('contact_phone', models.CharField(max_length=20)),
                ('contact_email', models.EmailField(blank=True, max_length=254)),
                ('location', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('website', models.URLField(blank=True)),
                ('booking_url', models.URLField(blank=True, help_text='Direct link for booking/reservations')),
                ('image_url', models.URLField(blank=True)),
                ('rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('price_range', models.CharField(blank=True, max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('description_tr', models.TextField(blank=True)),
                ('description_ru', models.TextField(blank=True)),
                ('description_pl', models.TextField(blank=True)),
                ('description_de', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(db_index=True, max_length=100, unique=True)),
                ('preferred_language', models.CharField(default='en', max_length=10)),
                ('communication_style', models.CharField(default='casual', max_length=20)),
                ('detail_preference', models.CharField(default='moderate', max_length=20)),
                ('living_status', models.CharField(blank=True, max_length=50)),
                ('family_situation', models.CharField(blank=True, max_length=100)),
                ('work_situation', models.CharField(blank=True, max_length=100)),
                ('current_location', models.CharField(blank=True, max_length=100)),
                ('query_history', models.JSONField(default=list)),
                ('service_usage', models.JSONField(default=dict)),
                ('interests', models.JSONField(default=list)),
                ('goals', models.JSONField(default=list)),
                ('total_interactions', models.IntegerField(default=0)),
                ('last_interaction', models.DateTimeField(blank=True, null=True)),
                ('satisfaction_rating', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100)),
                ('phone_number', models.CharField(max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('preferred_language', models.CharField(choices=[('en', 'English'), ('tr', 'Turkish'), ('ru', 'Russian'), ('pl', 'Polish'), ('de', 'German')], default='en', max_length=2)),
                ('request_type', models.CharField(choices=[('car_rental', 'Car Rental'), ('accommodation', 'Accommodation'), ('activities', 'Things to Do'), ('dining', 'Restaurants & Dining'), ('transportation', 'Transportation'), ('legal', 'Legal Services'), ('medical', 'Medical Services'), ('shopping', 'Shopping'), ('human_assistance', 'Human Assistance'), ('other', 'Other')], max_length=20)),
                ('message', models.TextField()),
                ('original_message', models.TextField()),
                ('location_preference', models.CharField(blank=True, max_length=100)),
                ('budget_range', models.CharField(blank=True, max_length=50)),
                ('dates_needed', models.CharField(blank=True, max_length=100)),
                ('number_of_people', models.IntegerField(default=1)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('priority', models.IntegerField(default=3)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('admin_notes', models.TextField(blank=True)),
                ('assigned_to', models.CharField(blank=True, max_length=100)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='KnowledgeBase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('category', models.CharField(choices=[('general', 'General Information'), ('legal', 'Legal Information')], max_length=20)),
                ('content_en', models.TextField(help_text='Content in English')),
                ('content_tr', models.TextField(blank=True)),
                ('content_ru', models.TextField(blank=True)),
                ('content_pl', models.TextField(blank=True)),
                ('content_de', models.TextField(blank=True)),
                ('keywords', models.CharField(help_text='Comma-separated keywords for AI search', max_length=500)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('source_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='assistant.linksource')),
            ],
        ),
        migrations.CreateModel(
            name='Listing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_name', models.CharField(help_text="e.g., 'WhatsApp', 'Facebook', '101evler', etc.", max_length=50)),
                ('source_id', models.CharField(db_index=True, help_text='Unique ID from the provider (e.g., post_id)', max_length=100, unique=True)),
                ('source_url', models.URLField(blank=True, max_length=512, null=True)),
                ('posted_at', models.DateTimeField(blank=True, null=True)),
                ('raw_text', models.TextField(blank=True, help_text='Original, unstructured post text')),
                ('structured_data', models.JSONField(blank=True, null=True)),
                ('listing_type', models.CharField(blank=True, db_index=True, help_text="e.g., 'property_rent', 'car_sale'", max_length=50)),
                ('location', models.CharField(blank=True, db_index=True, max_length=100)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('currency', models.CharField(blank=True, max_length=10)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('status', models.CharField(choices=[('new', 'New'), ('contacted', 'Contacted'), ('verified_with_photos', 'Verified with Photos'), ('inactive', 'Inactive')], db_index=True, default='new', help_text='Internal lifecycle for proxy outreach', max_length=32)),
                ('last_seen_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('image_urls', models.JSONField(blank=True, default=list, help_text='Permanent CDN/S3 URLs for photos')),
                ('has_image', models.BooleanField(default=False)),
                ('photos_requested', models.BooleanField(default=False, help_text='True when we have asked the agent for photos but not yet received them.')),
                ('contact_channel', models.CharField(blank=True, choices=[('website', 'Website'), ('facebook', 'Facebook'), ('telegram', 'Telegram'), ('whatsapp', 'Whatsapp'), ('other', 'Other')], help_text='e.g., whatsapp, telegram', max_length=20)),
                ('contact_identifier', models.CharField(blank=True, db_index=True, help_text='e.g., E.164 phone number or chat id', max_length=100)),
                ('source_private_label', models.CharField(blank=True, help_text='Internal tag for source; never surfaced to end users', max_length=50)),
            ],
            options={
                'ordering': ['-last_seen_at'],
                'indexes': [models.Index(fields=['is_active', 'listing_type', 'last_seen_at'], name='assistant_l_is_acti_0556e9_idx'), models.Index(fields=['location', 'last_seen_at'], name='assistant_l_locatio_eeee66_idx')],
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='listings/%Y/%m/%d/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('listing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='assistant.listing')),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('user', 'User'), ('assistant', 'Assistant')], max_length=20)),
                ('content', models.TextField()),
                ('language', models.CharField(default='en', max_length=2)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('message_context', models.JSONField(blank=True, default=dict)),
                ('pending_state', models.JSONField(blank=True, null=True)),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='assistant.conversation')),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='ServiceFeature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feature_name', models.CharField(blank=True, max_length=100)),
                ('feature_name_tr', models.CharField(blank=True, max_length=100)),
                ('feature_name_ru', models.CharField(blank=True, max_length=100)),
                ('feature_name_pl', models.CharField(blank=True, max_length=100)),
                ('feature_name_de', models.CharField(blank=True, max_length=100)),
                ('service_provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='features', to='assistant.serviceprovider')),
            ],
        ),
        migrations.CreateModel(
            name='ConversationContext',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('conversation_id', models.CharField(db_index=True, max_length=100, unique=True)),
                ('current_topic', models.CharField(blank=True, max_length=200)),
                ('user_situation', models.JSONField(default=dict)),
                ('emotional_state', models.CharField(blank=True, max_length=50)),
                ('urgency_level', models.CharField(default='medium', max_length=20)),
                ('information_gaps', models.JSONField(default=list)),
                ('conversation_phase', models.CharField(default='initial', max_length=50)),
                ('active_goals', models.JSONField(default=list)),
                ('pending_actions', models.JSONField(default=list)),
                ('topic_history', models.JSONField(default=list)),
                ('decision_points', models.JSONField(default=list)),
                ('user_feedback', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('user_profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='assistant.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='ContactIndex',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('normalized_contact', models.CharField(db_index=True, max_length=32)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('conversation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contacts', to='assistant.conversation')),
                ('listing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contact_indexes', to='assistant.listing')),
            ],
            options={
                'unique_together': {('normalized_contact', 'listing')},
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('preferred_date', models.DateTimeField()),
                ('preferred_time', models.TimeField()),
                ('message', models.TextField(blank=True, help_text='Additional message for the agent')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('contact_phone', models.CharField(blank=True, max_length=20)),
                ('contact_email', models.EmailField(blank=True, max_length=254)),
                ('agent_response', models.TextField(blank=True)),
                ('agent_available_times', models.JSONField(default=list, help_text='Available time slots from agent')),
                ('agent_notes', models.TextField(blank=True, help_text='Additional notes from agent')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('confirmed_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to=settings.AUTH_USER_MODEL)),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='assistant.conversation')),
                ('listing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='assistant.listing')),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['listing', 'status'], name='assistant_b_listing_632d72_idx'), models.Index(fields=['user', 'status'], name='assistant_b_user_id_019039_idx'), models.Index(fields=['preferred_date'], name='assistant_b_preferr_43eb00_idx')],
            },
        ),
    ]
