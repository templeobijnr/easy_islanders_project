# Generated by Django 5.2.5 on 2025-08-26 22:09

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='LinkSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(unique=True)),
                ('category', models.CharField(help_text='e.g., Residency, Banking, Car Imports', max_length=50)),
                ('language', models.CharField(choices=[('en', 'English'), ('ru', 'Russian'), ('pl', 'Polish'), ('de', 'German')], default='en', max_length=2)),
                ('last_ingested', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='ServiceProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('category', models.CharField(choices=[('car_rental', 'Car Rental'), ('accomodation', 'Accomodation'), ('activities', 'Activities & Tours'), ('dining', 'Restaurants'), ('transportation', 'Transportation'), ('legal', 'Legal Services'), ('transportaion', 'Transporation'), ('medical', 'Medical Services'), ('shopping', 'Shopping')], max_length=20)),
                ('contact_phone', models.CharField(max_length=20)),
                ('contact_email', models.EmailField(blank=True, max_length=254)),
                ('location', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('website', models.URLField(blank=True)),
                ('booking_url', models.URLField(blank=True, help_text='Direct Link for booking/reservations')),
                ('image_url', models.URLField(blank=True)),
                ('rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('price_range', models.CharField(blank=True, help_text="e.g., '$25-45/day' or '$$$'", max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('description_ru', models.TextField(blank=True)),
                ('description_pl', models.TextField(blank=True)),
                ('description_de', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100)),
                ('phone_number', models.CharField(max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('preferred_language', models.CharField(choices=[('en', 'English'), ('ru', 'Russian'), ('pl', 'Polish'), ('de', 'German')], default='en', max_length=2)),
                ('request_type', models.CharField(choices=[('car_rental', 'Car Rental'), ('accomodation', 'Accomodation'), ('activities', 'Things to Do'), ('dining', 'Restaurants & Dining'), ('transportation', 'Transportation'), ('legal', 'Legal Services'), ('medical', 'Medical Services'), ('shopping', 'Shopping'), ('human_assistance', 'Human Assistance'), ('other', 'Other')], max_length=20)),
                ('message', models.TextField()),
                ('original_message', models.TextField()),
                ('location_preference', models.CharField(blank=True, max_length=100)),
                ('budget_range', models.CharField(blank=True, max_length=50)),
                ('dates_needed', models.CharField(blank=True, max_length=100)),
                ('number_of_peope', models.IntegerField(default=1)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('priority', models.IntegerField(default=3)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('admin_notes', models.TextField(blank=True)),
                ('assigned_to', models.CharField(blank=True, max_length=100)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='KnowledgeBase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('category', models.CharField(choices=[('general', 'General Information'), ('legal', 'Legal Information')], max_length=20)),
                ('content_en', models.TextField(help_text='Content in English')),
                ('content_ru', models.TextField(blank=True, help_text='Content in Russian')),
                ('content_pl', models.TextField(blank=True, help_text='Content in Polish')),
                ('content_de', models.TextField(blank=True, help_text='Content in German')),
                ('keywords', models.CharField(help_text='Comma-separaated keywords for AI search', max_length=500)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('source_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='assistant.linksource')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceFeature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feature_name', models.CharField(blank=True, max_length=100)),
                ('feature_name_ru', models.CharField(blank=True, max_length=100)),
                ('feature_name_pl', models.CharField(blank=True, max_length=100)),
                ('feature_name_de', models.CharField(blank=True, max_length=100)),
                ('service_provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='features', to='assistant.serviceprovider')),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_name', models.CharField(max_length=100)),
                ('customer_phone', models.CharField(max_length=20)),
                ('customer_email', models.EmailField(blank=True, max_length=254)),
                ('booking_date', models.DateField()),
                ('booking_time', models.TimeField(blank=True, null=True)),
                ('number_of_people', models.IntegerField(default=1)),
                ('duration_days', models.IntegerField(default=1)),
                ('special_requests', models.TextField(blank=True)),
                ('total_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending Confirmation'), ('confirmed', 'Confirmed'), ('cancelled', 'Cancelled'), ('completed', 'Completed')], default='pending', max_length=20)),
                ('booking_reference', models.CharField(editable=False, max_length=20, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('service_provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assistant.serviceprovider')),
            ],
        ),
    ]
