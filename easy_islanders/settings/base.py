"""
Django settings for easy_islanders project.

Generated by 'django-admin startproject' using Django 5.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
from decouple import config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY', default='django-insecure-^8j$q^-8r2s=1)&etjdrk%441b*r0f@urp(_9@&14409_1=luy')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', default=True, cast=bool)

ALLOWED_HOSTS = config('ALLOWED_HOSTS', default='*').split(',')


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Third-party apps
    'rest_framework',
    'rest_framework_simplejwt',
    'corsheaders',

    # Local apps - users must come before assistant
    'users',
    'listings',
    'assistant',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
]

ROOT_URLCONF = 'easy_islanders.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'easy_islanders.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Media (for uploaded/listing images)
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Custom User Model (Phase 0 - Authentication)
AUTH_USER_MODEL = 'users.User'

# REST Framework & JWT Configuration
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ]
}

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': __import__('datetime').timedelta(days=7),
    'REFRESH_TOKEN_LIFETIME': __import__('datetime').timedelta(days=30),
    'ALGORITHM': 'HS256',
}

CORS_ALLOW_ALL_ORIGINS = True

# --- DECOUPLE AND AI CONFIGURATION ---
# This part is crucial for reading the .env file

from decouple import config

# AI ASSISTANT CONFIGURATION
# The config() function reads the value from your .env file
OPENAI_API_KEY = config('OPENAI_API_KEY', default='')

# Enhanced Agent Context - Feature Flag (default: disabled for safety)
ENABLE_AGENT_CONTEXT = config('ENABLE_AGENT_CONTEXT', default='false').lower() == 'true'

# Redis Configuration
REDIS_URL = config('REDIS_URL', default='redis://127.0.0.1:6379/0')

# Cache configuration with optional Redis
USE_REDIS_CACHE = config('USE_REDIS_CACHE', default=False, cast=bool)

if USE_REDIS_CACHE:
    CACHES = {
        "default": {
            "BACKEND": "django_redis.cache.RedisCache",
            "LOCATION": REDIS_URL,
            "OPTIONS": {
                "CLIENT_CLASS": "django_redis.client.DefaultClient",
                # Swallow redis errors as cache misses instead of crashing requests
                "IGNORE_EXCEPTIONS": True,
            },
            "TIMEOUT": 300,
        }
    }
else:
    # Development-friendly in-memory cache
    CACHES = {
        "default": {
            "BACKEND": "django.core.cache.backends.locmem.LocMemCache",
            "LOCATION": "easy_islanders_local_cache",
            "TIMEOUT": 300,
        }
    }

# Celery Configuration
CELERY_BROKER_URL = config('CELERY_BROKER_URL', default=REDIS_URL)
CELERY_RESULT_BACKEND = config('CELERY_RESULT_BACKEND', default=REDIS_URL)
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TIMEZONE = TIME_ZONE
CELERY_TASK_TIME_LIMIT = 60
CELERY_TASK_ACKS_LATE = True
CELERY_TASK_REJECT_ON_WORKER_LOST = True
OPENAI_MODEL = config('OPENAI_MODEL', default='gpt-4-turbo-preview')

# Proactive Agent Configuration
PROACTIVE_AGENT_ENABLED = config('PROACTIVE_AGENT_ENABLED', default=False, cast=bool)
ENABLE_PROACTIVE_PHOTOS = config('ENABLE_PROACTIVE_PHOTOS', default=False, cast=bool)
ENABLE_PROACTIVE_REMINDERS = config('ENABLE_PROACTIVE_REMINDERS', default=False, cast=bool)
ENABLE_PROACTIVE_QUESTIONS = config('ENABLE_PROACTIVE_QUESTIONS', default=False, cast=bool)
ENABLE_PROACTIVE_PREDICTIONS = config('ENABLE_PROACTIVE_PREDICTIONS', default=False, cast=bool)

# Auto-Response Configuration
ENABLE_AUTO_RESPONSE = config('ENABLE_AUTO_RESPONSE', default=False, cast=bool)

# Proactive Agent Limits
MAX_PROACTIVE_MESSAGES_PER_DAY = config('MAX_PROACTIVE_MESSAGES_PER_DAY', default=3, cast=int)
PROACTIVE_RATE_LIMIT_WINDOW = config('PROACTIVE_RATE_LIMIT_WINDOW', default=3600, cast=int)  # 1 hour
