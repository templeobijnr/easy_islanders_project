#!/usr/bin/env python3
"""
Quick fix script to set up Twilio credentials for Easy Islanders.
This script will help you configure Twilio WhatsApp for the closed-loop communication.
"""

import os
from pathlib import Path

def create_env_file():
    """Create .env file with Twilio configuration."""
    
    print("üîß Setting up Twilio WhatsApp Configuration")
    print("=" * 50)
    
    # Check if .env already exists
    env_path = Path(".env")
    if env_path.exists():
        print("‚ö†Ô∏è  .env file already exists. Backing up to .env.backup")
        env_path.rename(".env.backup")
    
    # Get Twilio credentials from user
    print("\nüì± To get your Twilio credentials:")
    print("1. Go to https://console.twilio.com/")
    print("2. Sign up for a free account")
    print("3. Get your Account SID and Auth Token from the dashboard")
    print("4. Enable WhatsApp Sandbox (free for testing)")
    
    print("\nüîë Enter your Twilio credentials:")
    account_sid = input("Account SID: ").strip()
    auth_token = input("Auth Token: ").strip()
    whatsapp_from = input("WhatsApp From (default: whatsapp:+14155238886): ").strip() or "whatsapp:+14155238886"
    
    # Create .env file
    env_content = f"""# Easy Islanders Environment Configuration
# Generated by fix_twilio.py

# Django Configuration
SECRET_KEY=django-insecure-^8j$q^-8r2s=1)&etjdrk%441b*r0f@urp(_9@&14409_1=luy
DEBUG=True
ALLOWED_HOSTS=*

# Twilio WhatsApp Configuration
TWILIO_ACCOUNT_SID={account_sid}
TWILIO_AUTH_TOKEN={auth_token}
TWILIO_WHATSAPP_FROM={whatsapp_from}

# OpenAI Configuration (get from https://platform.openai.com/api-keys)
OPENAI_API_KEY=your_openai_api_key_here

# Redis Configuration
REDIS_URL=redis://localhost:6379/0
CELERY_BROKER_URL=redis://localhost:6379/0
CELERY_RESULT_BACKEND=redis://localhost:6379/0
"""
    
    with open(".env", "w") as f:
        f.write(env_content)
    
    print(f"\n‚úÖ Created .env file with your Twilio credentials")
    print(f"üìÅ File location: {env_path.absolute()}")
    
    return account_sid, auth_token, whatsapp_from

def test_twilio_connection(account_sid, auth_token, whatsapp_from):
    """Test Twilio connection."""
    print("\nüß™ Testing Twilio connection...")
    
    try:
        import requests
        
        # Test API connection
        url = f"https://api.twilio.com/2010-04-01/Accounts/{account_sid}.json"
        response = requests.get(url, auth=(account_sid, auth_token))
        
        if response.status_code == 200:
            print("‚úÖ Twilio connection successful!")
            account_info = response.json()
            print(f"   Account: {account_info.get('friendly_name', 'Unknown')}")
            print(f"   Status: {account_info.get('status', 'Unknown')}")
            return True
        else:
            print(f"‚ùå Twilio connection failed: {response.status_code}")
            print(f"   Error: {response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå Error testing Twilio: {e}")
        return False

def main():
    """Main function."""
    print("üöÄ Easy Islanders - Twilio WhatsApp Setup")
    print("=" * 50)
    
    # Create .env file
    account_sid, auth_token, whatsapp_from = create_env_file()
    
    # Test connection
    if test_twilio_connection(account_sid, auth_token, whatsapp_from):
        print("\nüéâ Setup complete! Your closed-loop communication is ready.")
        print("\nüìã Next steps:")
        print("1. Restart your Django server: python manage.py runserver")
        print("2. Test the agent outreach feature")
        print("3. Send a WhatsApp message to your sandbox number")
    else:
        print("\n‚ö†Ô∏è  Setup incomplete. Please check your Twilio credentials.")
        print("   You can edit the .env file and try again.")

if __name__ == "__main__":
    main()



