# fly.toml â€” Easy Islanders Router v1.5
app = "easyislanders-router-temple-staging"
primary_region = "fra"                   # e.g., FRA/CDG/AMS

[build]
  dockerfile = "./Dockerfile"

[env]
  PORT = "8000"
  PYTHONUNBUFFERED = "1"
  DJANGO_SETTINGS_MODULE = "easy_islanders.settings"
  DJANGO_ENV = "production"
  ENV = "staging"
  DEBUG = "false"
  ROUTER_CONFIG = "calibrated"
  ROUTER_SHADOW = "0.10"
  MULTIROUTE_ENABLED = "false"
  GUNICORN_WORKERS = "3"

# Machines (HTTP) service
[http_service]
  internal_port = 8000
  force_https = true
  auto_start_machines = true
  auto_stop_machines = true
  min_machines_running = 1
  processes = ["app"]

[[services]]
  protocol = "tcp"
  internal_port = 8000
  processes = ["app"]

  [[services.ports]]
    handlers = ["http"]
    port = 80

  [[services.ports]]
    handlers = ["tls", "http"]
    port = 443

  [[services.tcp_checks]]
    interval = "15s"
    timeout = "2s"
    grace_period = "30s"
  
  [[services.http_checks]]
    interval = "10s"
    timeout = "2s"
    grace_period = "5s"
    method = "get"
    path = "/api/health/"
    protocol = "http"
    restart_limit = 0
    tls_skip_verify = false
    [services.http_checks.headers]

# Gunicorn command is in Dockerfile entrypoint.sh (with migrations)
# Comment out to use Dockerfile CMD instead
# [processes]
#   app = "gunicorn easy_islanders.wsgi:application -b 0.0.0.0:8000 -w 2 --timeout 120"

# Increase memory allocation for ML models
[vm]
  memory = "2048"  # 2GB for scikit-learn models and Django
  cpu_kind = "shared"
  cpus = 1